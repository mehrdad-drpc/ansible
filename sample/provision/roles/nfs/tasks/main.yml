# - name: --- install firewalld and nfs-utils ---
#   yum:
#     name: "{{ item }}"
#     state: present
#   loop:
#     - firewalld
#     - nfs-utils
#   tags: install_package

- name: --- install ufw and nfs-utils via LIST on SERVER ---
  apt:
    name: [ufw, nfs-kernel-server]
    state: present
  tags: install_package
  when: server_role=='nfsserver'

- name: --- install firewalld and nfs-utils via LIST on CLIENTS ---
  yum:
    name: [firewalld, nfs-utils]
    state: present
  tags: install_package
  when: server_role=='nfsclient'

- name: --- enable and start services on SERVER  ---
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - nfs-server
    - ufw
  when: server_role=='nfsserver'
  tags: [nfs_server_services]

- name: --- enable and start services on CLIENTS ---
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - nfs-utils
    - firewalld
  when: server_role=='nfsclient'
  tags: [nfs_client_services]

- name: --- allow nfs ports into ufw on SERVER ---
  ufw:
    rule: allow
    port: "{{ item }}"
  loop:
    - 22
    - 2049
  when: server_role=='nfsserver'
  tags: [allow_ufw]

- name: --- open port on CLIENTS over the firewalld ---
  firewalld:
    service: "{{ item }}"
    permanent: yes
    zone: public
    state: enabled
    immediate: true
  loop:
    - ssh
    - nfs
  when: server_role=='nfsclient'
  tags: [allow_firewalld]

- name: --- create shared directory ---
  file:
    path: /data1
    state: directory
    mode: 0755
  tags: [create_shared_dir]

- name: --- create /etc/exports ---
  file:
    path: /etc/exports
    state: touch
  tags: [create_exports]

- name: --- write nfs config into the /etc/exports file on SERVER ---
  lineinfile:
    path: /etc/exports
    line: "/data1 {{ item }}(rw,sync,no_root_squash,no_subtree_check)"
  loop:
    - "{{groups.nfs_client}}"
  when: server_role=='nfsserver'
  tags: [config_server_exports]

- name: --- write nfs config into the /etc/exports file on CLIENTS ---
  lineinfile:
    path: /etc/exports
    line: "/data1 {{ item }}(rw,sync,no_root_squash,no_subtree_check)"
  loop:
    - "{{ groups.nfs_server }}"
  when: server_role=='nfsclient'
  tags: [config_client_exports]

- name: --- run exportfs commmand ---
  shell:
    cmd: exportfs -arv
  tags: [run_exportfs]

- name: --- mount nfs clients ---
  mount:
    src: "{{ item }}:/data1"
    path: /data1
    opts: rw,sync,hard,intr
    state: mounted
    fstype: nfs
  with_items:
    - "{{ groups.nfs_server }}"
  when: server_role=='nfsclient'
  tags: [mount_nfs_clients]